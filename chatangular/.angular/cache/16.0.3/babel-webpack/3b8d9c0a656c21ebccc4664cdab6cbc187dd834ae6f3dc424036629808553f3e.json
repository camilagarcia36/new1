{"ast":null,"code":"import { io } from 'socket.io-client';\nimport * as i0 from \"@angular/core\";\nclass SocketService {\n  constructor() {\n    /* this.io.emit(\"test\", {text: \"HOLA MUNDO\"}); //cliente emite eventos al servidor no al cliente\n     this.io.on(\"test2\",(objeto)=>{\n       alert(objeto.text)\n     });\n    */\n    //hacer uso de socketio conexion\n    this.io = io(\"http://localhost:3000/\", {\n      withCredentials: true,\n      //conexion automatica\n      autoConnect: true\n    });\n  }\n}\nSocketService.ɵfac = function SocketService_Factory(t) {\n  return new (t || SocketService)();\n};\nSocketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SocketService,\n  factory: SocketService.ɵfac,\n  providedIn: 'root'\n});\nexport { SocketService };","map":{"version":3,"names":["io","SocketService","constructor","withCredentials","autoConnect","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Admin\\git\\chatproject\\chatangular\\src\\app\\services\\socket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { io } from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n//hacer uso de socketio conexion\nio = io(\"http://localhost:3000/\", {\n  withCredentials:true,\n  //conexion automatica\n  autoConnect: true\n});\n  constructor() {\n   /* this.io.emit(\"test\", {text: \"HOLA MUNDO\"}); //cliente emite eventos al servidor no al cliente\n    this.io.on(\"test2\",(objeto)=>{\n      alert(objeto.text)\n    });\n*/\n\n\n  }\n}\n"],"mappings":"AACA,SAASA,EAAE,QAAQ,kBAAkB;;AAErC,MAGaC,aAAa;EAOxBC,YAAA;IACC;;;;;IAPH;IACA,KAAAF,EAAE,GAAGA,EAAE,CAAC,wBAAwB,EAAE;MAChCG,eAAe,EAAC,IAAI;MACpB;MACAC,WAAW,EAAE;KACd,CAAC;EASA;;AAfWH,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;SAAbA,aAAa;EAAAI,OAAA,EAAbJ,aAAa,CAAAK,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAEPN,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}